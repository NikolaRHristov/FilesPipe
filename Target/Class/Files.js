import o from"../Fn/By.js";import r from"../Fn/In.js";import i from"../Fn/Merge.js";import p from"../Fn/Not.js";import P from"../Fn/Pipe.js";import e from"../Object/Option.js";class h{Pipe=async t=>await P(this.Plan,i(e.Action,t));Not=async t=>(this.Plan.Results=await p(t,this.Plan.Results),this);By=async(t="**/*")=>(this.Plan.Results=await o(t,this.Plan.Paths,this.Plan.Results),this);In=async(t="./")=>{const a=await r(t,this.Plan.Paths);if(a instanceof Map)for(const[n,s]of a)this.Plan.Paths.set(n,s);return this};Plan={Cache:e.Cache,Files:0,Logger:e.Logger,Info:{},Paths:new Map,Results:new Map,On:{Buffer:"",After:0,Before:0,Input:"",Output:""}};constructor(t,a){this.Plan.Cache=t??this.Plan.Cache,this.Plan.Logger=a??this.Plan.Logger}}export{h as default};
